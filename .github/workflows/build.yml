name: build and release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Test version
        run: |
          echo ${{ steps.get_version.outputs.VERSION }}
          echo ${{ github.ref }}

      # - uses: actions/setup-go@v3
      #   with:
      #     go-version: '1.19.1'

      # - name: Get gopath
      #   id: get_gopath
      #   run: echo ::set-output name=GOPATH::$(go env GOPATH)

      # - run: go env
      # - run: go version

      - name: Build calico-node binary
        shell: bash
        run: |
          #linux/arm64
          mkdir -p /tmp/amd64
          mkdir -p /tmp/arm64
          docker run -i --rm --entrypoint="" -v /tmp/amd64:/tmp calico/node:${{ steps.get_version.outputs.VERSION }} sh -c "cp /bin/calico-node /tmp"
          docker run -i --rm --entrypoint="" -v /tmp/arm64:/tmp --platform linux/arm64 calico/node:${{ steps.get_version.outputs.VERSION }}-arm64 sh -c "cp /bin/calico-node /tmp"

          pushd /tmp/amd64 &>/dev/null
            tar -cvJf /tmp/calico-node-${{ steps.get_version.outputs.VERSION }}.linux-amd64.tar.xz calico-node
            tar -cvzf /tmp/calico-node-${{ steps.get_version.outputs.VERSION }}.linux-amd64.tar.gz calico-node
            cp calico-node /tmp/calico-node-linux-amd64
            ./calico-node -v
          popd &>/dev/null

          pushd /tmp/arm64 &>/dev/null
            tar -cvJf /tmp/calico-node-${{ steps.get_version.outputs.VERSION }}.linux-arm64.tar.xz calico-node
            tar -cvzf /tmp/calico-node-${{ steps.get_version.outputs.VERSION }}.linux-arm64.tar.gz calico-node
            cp calico-node /tmp/calico-node-linux-arm64
          popd &>/dev/null


      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: "Release calico-node ${{ steps.get_version.outputs.VERSION }}.  \n source: https://github.com/projectcalico/calico/releases/tag/${{ steps.get_version.outputs.VERSION }}"
          files: |
            /tmp/calico-node-${{ steps.get_version.outputs.VERSION }}.linux-arm64.tar.xz
            /tmp/calico-node-${{ steps.get_version.outputs.VERSION }}.linux-arm64.tar.gz
            /tmp/calico-node-${{ steps.get_version.outputs.VERSION }}.linux-amd64.tar.xz
            /tmp/calico-node-${{ steps.get_version.outputs.VERSION }}.linux-amd64.tar.gz
            /tmp/calico-node-linux-amd64
            /tmp/calico-node-linux-arm64
